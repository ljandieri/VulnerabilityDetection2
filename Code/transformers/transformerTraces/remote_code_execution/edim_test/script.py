import os
import matplotlib.pyplot as plt

thisDir = os.getcwd()

files = [f for f in os.listdir(thisDir) if 'Transformer_model' in f]

lineNumbers = [10,11,12,13]

d = {}
for f in files:
    right = f.split('edim')[1]
    epochs = int(right.split('_')[0])
    if epochs not in d:
        d[epochs] = {}
    with open(f) as fopen:
        thisFile = fopen.readlines()
        for line in lineNumbers:
            thisLine = thisFile[line]
            metric = thisLine.split(':')[0]
            value = float(thisLine.split(' ')[-1][:6])
            if metric in d[epochs]:
                d[epochs][metric].append(value)
            else:
                d[epochs][metric] = [value]
            

names = sorted(d.keys())
F1scores = [sum(d[name]['F1 score']) / len(d[name]['F1 score']) for name in names]
Accuracy = [sum(d[name]['Accuracy']) / len(d[name]['Accuracy']) for name in names]
Recall = [sum(d[name]['Recall']) / len(d[name]['Recall']) for name in names]
Precision = [sum(d[name]['Precision']) / len(d[name]['Precision']) for name in names]


plt.scatter(names,F1scores)
plt.plot(names,F1scores, label='F1 Scores')

#plt.scatter(names,Accuracy)
#plt.plot(names,Accuracy, label='Accuracy')

#plt.scatter(names,Recall)
#plt.plot(names,Recall, label = 'Recall')

#plt.scatter(names,Precision)
#plt.plot(names,Precision, label='Precision')

plt.title('Optimal Embedding Size')
plt.legend()
plt.xlabel('Embedding Size')
plt.ylabel('F1 Scores')
#plt.show()
plt.savefig('Figure_2.png')